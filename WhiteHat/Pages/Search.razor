@page "/search"
@page "/search/{query}"
@using WhiteHat.Components
@using WhiteHat.Misc
@using WhiteHat.Models
@using WhiteHat.Services
@inject HNFetcher HNFetcher

<PageTitle>WhiteHat | Home</PageTitle>

<div class="story-container">
    @if(_items is null || _items.Count < 0){
        <p>
            loading
        </p>
    }
    else{
        for (var i = 0; i < _items.Count(); i++)
        {
            int index = i + 1;
            <HnListItem Item="_items[i]" Index="index"></HnListItem>
        }

        @if(_isLoading){
            <HnListItem Index="_items.Count() + 1" Loader="true"></HnListItem>
        }
        @if (_isLoading)
        {
            <button class="loadmore loading" @onclick=LoadStories>
                <span class="loader"></span>
                Loading
            </button>
        }
        else{
            <button class="loadmore" @onclick=LoadStories>
                Load more
            </button>
        }
    }
</div>

@code {
    [Parameter]
    public string? Query { get; set; }

    private QueryResult _result;
    private readonly int _pageSize = Constants.PageSize;
    private int _page = 0;
    private int _loadedStories = 0;
    private bool _isLoading, _stop;
    List<HnItemAlgolia> _items;

    protected async override Task OnParametersSetAsync()
    {
        _items = new();
        _page = 0;
        _stop = _isLoading;
        await LoadStories();
    }

    private async Task LoadStories()
    {
        _isLoading = true;
        StateHasChanged();
        _result = await HNFetcher.Query(Query, _page++);
        _loadedStories = 0;

        if(_result is not null)
        {
            await LoadStory(_result.Hits.Length - 1);
            _isLoading = _stop;
        }
        else{
            _isLoading = false;
        }

        _stop = false;
        StateHasChanged();
    }

    private async Task LoadStory(int _leftToLoad)
    {
        var item = await HNFetcher.FetchItemAlgolia(_result.Hits[_loadedStories].Id);

        if (!_stop)
        {
            if (item is not null)
            {
                _items.Add(item);
                _loadedStories++;
                StateHasChanged();
            }
        }
        else
            return;

        if (_leftToLoad > 1)
            await LoadStory(--_leftToLoad);
    }
}
