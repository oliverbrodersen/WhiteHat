@page "/search"
@page "/search/{query}"
@using WhiteHat.Components
@using WhiteHat.Misc
@using WhiteHat.Models
@using WhiteHat.Services
@inject HNFetcher HNFetcher

<PageTitle>WhiteHat | Home</PageTitle>

<div class="search">
    <div>
        <h1>
            <div @onclick=LoadFromFresh>
                Search
            </div>
            <span>
                @Query
            </span>
        </h1>
        <span @onclick=ToggleSettings>
            <span class="material-icons-round">
                settings
            </span>
        </span>
    </div>
    <div class="settings @(_settingsOpen ? "open" : string.Empty)">
        <div class="settings-content">
            <div class="row">
                <div>
                    @if (!_orderByDate)
                    {
                        <div class="sorting" @onclick=SwitchSort>
                            <span class="material-icons-round">
                                sort
                            </span>
                            Popular
                        </div>   
                    }
                    else
                    {
                        <div class="sorting" @onclick=SwitchSort>
                            <span class="material-icons-round">
                                sort
                            </span>
                            Recent
                        </div>
                    }

                    <div class="sorting" @onclick=SwitchOnlyMatchTitle>
                        <Checkbox Checked=_onlyMatchTitle></Checkbox>
                        Only match title
                    </div>
                </div>
            </div>
            <div class="row ranges">
                <div>
                    <label>
                        Timeframe
                    </label>
                    <RangeInputComponent TItem="DateTimeOffset" @bind-To="_toDate" @bind-From="_fromDate">
                    </RangeInputComponent>
                </div>
                <div>
                    <label>
                        Points
                    </label>
                    <RangeInputComponent TItem="int?" @bind-To="_toPoints" @bind-From="_fromPoints">
                    </RangeInputComponent>
                </div>
                <div>
                    <label>
                        Comments
                    </label>
                    <RangeInputComponent TItem="int?" @bind-To="_toComments" @bind-From="_fromComments">
                    </RangeInputComponent>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="story-container">
    @if(_items is null || _items.Count < 0){
        <p>
            loading
        </p>
    }
    else{
        for (var i = 0; i < _items.Count(); i++)
        {
            int index = i + 1;
            <HnListItem Item="_items[i]" Index="index"></HnListItem>
        }

        @if(_isLoading){
            <HnListItem Index="_items.Count() + 1" Loader="true"></HnListItem>
        }
        @if (_isLoading)
        {
            <button class="loadmore loading" @onclick=LoadStories>
                <span class="loader"></span>
                Loading
            </button>
        }
        else{
            <button class="loadmore" @onclick=LoadStories>
                Load more
            </button>
        }
    }
</div>


