@page "/"
@page "/{page}"
@using WhiteHat.Components
@using WhiteHat.Misc
@using WhiteHat.Models
@using WhiteHat.Services
@inject HNFetcher HNFetcher
@inject IJSRuntime JSRuntime
@implements IDisposable

<PageTitle>@(string.IsNullOrEmpty(Page) || Page.ToLower() == "best" ? string.Empty : "[" + Page[0].ToString().ToUpper() + Page.Substring(1) + "] ")WhiteHat @(_shownItem is null ? string.Empty : " - " + _shownItem.Title)</PageTitle>
<div class="container @(_shownItem is not null ? "open" : string.Empty) @(_showSmallPreview?"small":string.Empty)">
    <div class="items-container" id="list">
        @if (_items is null || _items.Count < 0)
        {
            <HnListItem Index="1" Loader="true"></HnListItem>
            <button class="loadmore loading" @onclick=LoadStories>
                <span class="loader"></span>
                Loading
            </button>
        }
        else
        {
            for (var i = 0; i < _items.Count(); i++)
            {
                int index = i;
                <HnListItem @bind-Item="_items[index]" OpenLink=@(x => OpenItem(x,index)) Selected=_shownItem SelectedIndex=_selectedIndex></HnListItem>
            }

            @if (_isLoading)
            {
                <HnListItem Index="_items.Count() + 1" Loader="true"></HnListItem>
                <button class="loadmore loading" @onclick=LoadStories>
                    <span class="loader"></span>
                    Loading
                </button>
            }
            else
            {
                <button class="loadmore" @onclick=LoadStories>
                    Load more
                </button>
            }
        }
        <div class="footer">
            <p>
                v@(Constants.CurrentVersion)
            </p>
        </div>
    </div>
    <div class="link-pane-container">
        <div class="link-pane">
            <div class="pane-header">
                <div class="group">
                    <button @onclick=OpenInNewTab>
                        <p>
                            Open
                        </p>
                        <span class="material-icons-round">
                            open_in_new
                        </span>
                    </button>
                    <button @onclick=TogglePrevSize>
                        <p>
                            @(_showSmallPreview ? "Wide" : "Slim")
                        </p>
                        <span class="material-icons-round rotate">
                            @(_showSmallPreview ? "unfold_more" : "unfold_less")
                        </span>
                    </button>
                    <button @onclick=@(() => ScrollToItem(_shownItem.Id))>
                        <p>
                            Scroll to post
                        </p>
                        <span class="material-icons-round">
                            swipe_vertical
                        </span>
                    </button>
                    <button @onclick=ToggleContent>
                        <p>
                            @(!_isComments ? "Comments" : "Site")
                        </p>
                        <span class="material-icons-round">
                            @(!_isComments ? "mode_comment" : "language")
                        </span>
                    </button>
                </div>
                <div class="group">
                    <button class="round" @onclick=@(() => HandleUp(true))>
                        <span class="material-icons-round">
                            arrow_upward
                        </span>
                    </button>
                    <button class="round" @onclick=@(() => HandleDown(true))>
                        <span class="material-icons-round">
                            arrow_downward
                        </span>
                    </button>
                    <button class="round close" @onclick=CloseLinkPane>
                        <span class="material-icons-round">
                            close
                        </span>
                    </button>
                </div>
            </div>
            @if (_shownItem is not null)
            {
                <h3>
                    @_shownItem.Title
                    @if (_isIframeLoading && !_isComments)
                    {
                        <button id="loader" class="loadmore loading small" @onclick=StateHasChanged>
                            <span class="loader"></span>
                        </button>
                    }
                </h3>
                <div class="iframe-container">
                    @if (_isComments)
                    {
                        <div class="comments">
                            @if (_shownItem.Children is null || !_shownItem.Children.Any())
                            {
                                <p class="no-comments">
                                    No comments yet
                                </p>
                            }
                            else{
                                @foreach (var kid in _shownItem.Children)
                                {
                                    @if (kid is not null && !string.IsNullOrWhiteSpace(kid.Text) && !string.IsNullOrWhiteSpace(kid.Author))
                                    {
                                        <HnListItemComment Item="kid" Op="@_shownItem.Author" />
                                    }
                                }
                            }
                        </div>
                    }
                    else
                    {
                        <iframe src=@_shownItem.Url.ToString()
                                id="itemPreview"
                                @onload=IFrameLoaded
                                title=@_shownItem.Title
                                sandbox="allow-forms allow-same-origin allow-scripts"
                                referrerpolicy="no-referrer"
                                class="@(_isFrameOpen?string.Empty:"hidden")">
                        </iframe>
                        <button id="frameLoader" class="loadmore loading @(_isFrameOpen?"hidden":string.Empty)" @onclick=StateHasChanged>
                            <span class="loader"></span>
                            Loading
                        </button>
                    }
                </div>
            }
        </div>
    </div>
</div>

